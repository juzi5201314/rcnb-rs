name: release

on:
  release:
    types: [published]

jobs:
  release-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.0
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: build
        run: cargo build --release

      - name: Upload wasm
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./target/release/rcnb-rs.exe
          asset_name: x86_64-windows-${{ steps.get_release.outputs.tag_name }}-rcnb-rs.exe
          asset_content_type: application/octet-stream

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.0
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: install musl-tools
        run: sudo apt-get install -y musl-tools

      - name: install musl target
        run: rustup target add x86_64-unknown-linux-musl

      - name: build musl
        run: cargo build --release --target=x86_64-unknown-linux-musl

      - name: Upload musl
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./target/x86_64-unknown-linux-musl/release/rcnb-rs
          asset_name: x86_64-linux-musl-${{ steps.get_release.outputs.tag_name }}-rcnb-rs
          asset_content_type: application/octet-stream

      - name: install wasi target
        run: rustup target add wasm32-wasi

      - name: build wasm
        run: cargo build --release --target=wasm32-wasi

      - name: Upload wasm
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./target/wasm32-wasi/release/rcnb-rs.wasm
          asset_name: wasm32-wasi-${{ steps.get_release.outputs.tag_name }}-rcnb-rs.wasm
          asset_content_type: application/octet-stream